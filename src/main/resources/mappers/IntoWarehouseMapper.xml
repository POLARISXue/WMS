<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xy.wms.dao.IntoWarehouseMapper">
  <resultMap id="BaseResultMap" type="com.xy.wms.vo.IntoWarehouse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
    <result column="goods_number" jdbcType="INTEGER" property="goodsNumber" />
    <result column="total_price" jdbcType="DOUBLE" property="totalPrice" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="is_valid" jdbcType="INTEGER" property="isValid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, goods_id, supplier_id, goods_number, total_price, create_date, update_date, remarks, 
    state, is_valid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from into_warehouse
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from into_warehouse
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xy.wms.vo.IntoWarehouse">
    insert into into_warehouse (id, goods_id, supplier_id, 
      goods_number, total_price, create_date, 
      update_date, remarks, state, 
      is_valid)
    values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{supplierId,jdbcType=INTEGER}, 
      #{goodsNumber,jdbcType=INTEGER}, #{totalPrice,jdbcType=DOUBLE}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{isValid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xy.wms.vo.IntoWarehouse">
    insert into into_warehouse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="goodsNumber != null">
        goods_number,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="goodsNumber != null">
        #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xy.wms.vo.IntoWarehouse">
    update into_warehouse
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="goodsNumber != null">
        goods_number = #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xy.wms.vo.IntoWarehouse">
    update into_warehouse
    set goods_id = #{goodsId,jdbcType=INTEGER},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=DOUBLE},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      is_valid = #{isValid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByParams" parameterType="com.xy.wms.query.IntoWarehouseQuery" resultType="com.xy.wms.vo.IntoWarehouse">
    SELECT  i.id, goods_id, supplier_id, goods_number, total_price, i.create_date, i.update_date, i.is_valid,goods_name,s.name as supplier_name,i.state,remarks
    FROM into_warehouse i
    LEFT JOIN goods g
    ON i.goods_id = g.id
    LEFT JOIN supplier s
    on i.supplier_id = s.id
    <where>
      i.is_valid = 1
      <if test=" goodsName != null and goodsName != '' ">
        and goods_name like concat('%',#{goodsName},'%')
      </if>
      <if test=" null != supplier and supplier != '' ">
        and s.name like concat('%',#{supplier},'%')
      </if>
      <if test=" state != null and state !='' ">
        and state = #{state}
      </if>
    </where>
  </select>
</mapper>