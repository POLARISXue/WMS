<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xy.wms.dao.CustomersMapper">
  <resultMap id="BaseResultMap" type="com.xy.wms.vo.Customers">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="link_phone" jdbcType="VARCHAR" property="linkPhone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="is_valid" jdbcType="INTEGER" property="isValid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, link_phone, address, remarks, create_date, update_date, is_valid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customers
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customers
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xy.wms.vo.Customers">
    insert into customers (id, name, link_phone, 
      address, remarks, create_date, 
      update_date, is_valid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{linkPhone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{isValid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xy.wms.vo.Customers">
    insert into customers
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="linkPhone != null">
        link_phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="linkPhone != null">
        #{linkPhone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xy.wms.vo.Customers">
    update customers
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="linkPhone != null">
        link_phone = #{linkPhone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xy.wms.vo.Customers">
    update customers
    set name = #{name,jdbcType=VARCHAR},
      link_phone = #{linkPhone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 通过需求商查询需求商记录，返回需求商对象 -->
  <select id="queryCustomersByName" parameterType="string" resultType="com.xy.wms.vo.Customers">
    select
    <include refid="Base_Column_List"/>
    from
    customers
    where
    name = #{name}
  </select>
  <!-- 查询 -->
  <select id="selectByParams" parameterType="com.xy.wms.query.CustomersQuery" resultType="com.xy.wms.vo.Customers">
    select
    <include refid="Base_Column_List"/>
    from
    customers
    <where>
      is_valid = 1
      <if test="name != null and name != ''">
        and name like concat('%',#{name},'%')
      </if>
      <!-- 联系号码查询 -->
      <if test="null != linkPhone and linkPhone != ''">
        and linkPhone like concat('%',#{linkPhone},'%')
      </if>
    </where>
  </select>
  <!--批量删除（修改操作）-->
  <update id="deleteBatch">
    update
    customers
    set
    is_valid = 0
    where
    id
    in
    <foreach collection="array" separator="," open="(" close=")" item="id">
      #{id}
    </foreach>
  </update>

  <select id="queryAllCustomers" resultType="map">
    select
      id,name
    from
      customers
    where
      is_valid=1
  </select>
</mapper>